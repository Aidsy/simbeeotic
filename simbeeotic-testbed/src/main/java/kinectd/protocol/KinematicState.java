// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/State.proto

package kinectd.protocol;

public final class KinematicState {
  private KinematicState() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class State extends
      com.google.protobuf.GeneratedMessage {
    // Use State.newBuilder() to construct.
    private State() {
      initFields();
    }
    private State(boolean noInit) {}
    
    private static final State defaultInstance;
    public static State getDefaultInstance() {
      return defaultInstance;
    }
    
    public State getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kinectd.protocol.KinematicState.internal_static_kinectd_protocol_State_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kinectd.protocol.KinematicState.internal_static_kinectd_protocol_State_fieldAccessorTable;
    }
    
    public enum Orientation
        implements com.google.protobuf.ProtocolMessageEnum {
      CENTER(0, 0),
      LEFT(1, 1),
      RIGHT(2, 2),
      UNKNOWN(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Orientation valueOf(int value) {
        switch (value) {
          case 0: return CENTER;
          case 1: return LEFT;
          case 2: return RIGHT;
          case 3: return UNKNOWN;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Orientation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Orientation>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Orientation>() {
              public Orientation findValueByNumber(int number) {
                return Orientation.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return kinectd.protocol.KinematicState.State.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Orientation[] VALUES = {
        CENTER, LEFT, RIGHT, UNKNOWN, 
      };
      public static Orientation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Orientation(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        kinectd.protocol.KinematicState.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:kinectd.protocol.State.Orientation)
    }
    
    // required uint32 frameNum = 1;
    public static final int FRAMENUM_FIELD_NUMBER = 1;
    private boolean hasFrameNum;
    private int frameNum_ = 0;
    public boolean hasFrameNum() { return hasFrameNum; }
    public int getFrameNum() { return frameNum_; }
    
    // required bool occluded = 2;
    public static final int OCCLUDED_FIELD_NUMBER = 2;
    private boolean hasOccluded;
    private boolean occluded_ = false;
    public boolean hasOccluded() { return hasOccluded; }
    public boolean getOccluded() { return occluded_; }
    
    // required double locX = 3;
    public static final int LOCX_FIELD_NUMBER = 3;
    private boolean hasLocX;
    private double locX_ = 0D;
    public boolean hasLocX() { return hasLocX; }
    public double getLocX() { return locX_; }
    
    // required double locY = 4;
    public static final int LOCY_FIELD_NUMBER = 4;
    private boolean hasLocY;
    private double locY_ = 0D;
    public boolean hasLocY() { return hasLocY; }
    public double getLocY() { return locY_; }
    
    // required double locZ = 5;
    public static final int LOCZ_FIELD_NUMBER = 5;
    private boolean hasLocZ;
    private double locZ_ = 0D;
    public boolean hasLocZ() { return hasLocZ; }
    public double getLocZ() { return locZ_; }
    
    // required .kinectd.protocol.State.Orientation orient = 6;
    public static final int ORIENT_FIELD_NUMBER = 6;
    private boolean hasOrient;
    private kinectd.protocol.KinematicState.State.Orientation orient_;
    public boolean hasOrient() { return hasOrient; }
    public kinectd.protocol.KinematicState.State.Orientation getOrient() { return orient_; }
    
    // required double centerOffset = 7;
    public static final int CENTEROFFSET_FIELD_NUMBER = 7;
    private boolean hasCenterOffset;
    private double centerOffset_ = 0D;
    public boolean hasCenterOffset() { return hasCenterOffset; }
    public double getCenterOffset() { return centerOffset_; }
    
    private void initFields() {
      orient_ = kinectd.protocol.KinematicState.State.Orientation.CENTER;
    }
    public final boolean isInitialized() {
      if (!hasFrameNum) return false;
      if (!hasOccluded) return false;
      if (!hasLocX) return false;
      if (!hasLocY) return false;
      if (!hasLocZ) return false;
      if (!hasOrient) return false;
      if (!hasCenterOffset) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFrameNum()) {
        output.writeUInt32(1, getFrameNum());
      }
      if (hasOccluded()) {
        output.writeBool(2, getOccluded());
      }
      if (hasLocX()) {
        output.writeDouble(3, getLocX());
      }
      if (hasLocY()) {
        output.writeDouble(4, getLocY());
      }
      if (hasLocZ()) {
        output.writeDouble(5, getLocZ());
      }
      if (hasOrient()) {
        output.writeEnum(6, getOrient().getNumber());
      }
      if (hasCenterOffset()) {
        output.writeDouble(7, getCenterOffset());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFrameNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getFrameNum());
      }
      if (hasOccluded()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getOccluded());
      }
      if (hasLocX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getLocX());
      }
      if (hasLocY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getLocY());
      }
      if (hasLocZ()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, getLocZ());
      }
      if (hasOrient()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, getOrient().getNumber());
      }
      if (hasCenterOffset()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, getCenterOffset());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static kinectd.protocol.KinematicState.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static kinectd.protocol.KinematicState.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static kinectd.protocol.KinematicState.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static kinectd.protocol.KinematicState.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static kinectd.protocol.KinematicState.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static kinectd.protocol.KinematicState.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static kinectd.protocol.KinematicState.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static kinectd.protocol.KinematicState.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static kinectd.protocol.KinematicState.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static kinectd.protocol.KinematicState.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(kinectd.protocol.KinematicState.State prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private kinectd.protocol.KinematicState.State result;
      
      // Construct using kinectd.protocol.KinematicState.State.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new kinectd.protocol.KinematicState.State();
        return builder;
      }
      
      protected kinectd.protocol.KinematicState.State internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new kinectd.protocol.KinematicState.State();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kinectd.protocol.KinematicState.State.getDescriptor();
      }
      
      public kinectd.protocol.KinematicState.State getDefaultInstanceForType() {
        return kinectd.protocol.KinematicState.State.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public kinectd.protocol.KinematicState.State build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private kinectd.protocol.KinematicState.State buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public kinectd.protocol.KinematicState.State buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        kinectd.protocol.KinematicState.State returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kinectd.protocol.KinematicState.State) {
          return mergeFrom((kinectd.protocol.KinematicState.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(kinectd.protocol.KinematicState.State other) {
        if (other == kinectd.protocol.KinematicState.State.getDefaultInstance()) return this;
        if (other.hasFrameNum()) {
          setFrameNum(other.getFrameNum());
        }
        if (other.hasOccluded()) {
          setOccluded(other.getOccluded());
        }
        if (other.hasLocX()) {
          setLocX(other.getLocX());
        }
        if (other.hasLocY()) {
          setLocY(other.getLocY());
        }
        if (other.hasLocZ()) {
          setLocZ(other.getLocZ());
        }
        if (other.hasOrient()) {
          setOrient(other.getOrient());
        }
        if (other.hasCenterOffset()) {
          setCenterOffset(other.getCenterOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFrameNum(input.readUInt32());
              break;
            }
            case 16: {
              setOccluded(input.readBool());
              break;
            }
            case 25: {
              setLocX(input.readDouble());
              break;
            }
            case 33: {
              setLocY(input.readDouble());
              break;
            }
            case 41: {
              setLocZ(input.readDouble());
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              kinectd.protocol.KinematicState.State.Orientation value = kinectd.protocol.KinematicState.State.Orientation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                setOrient(value);
              }
              break;
            }
            case 57: {
              setCenterOffset(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required uint32 frameNum = 1;
      public boolean hasFrameNum() {
        return result.hasFrameNum();
      }
      public int getFrameNum() {
        return result.getFrameNum();
      }
      public Builder setFrameNum(int value) {
        result.hasFrameNum = true;
        result.frameNum_ = value;
        return this;
      }
      public Builder clearFrameNum() {
        result.hasFrameNum = false;
        result.frameNum_ = 0;
        return this;
      }
      
      // required bool occluded = 2;
      public boolean hasOccluded() {
        return result.hasOccluded();
      }
      public boolean getOccluded() {
        return result.getOccluded();
      }
      public Builder setOccluded(boolean value) {
        result.hasOccluded = true;
        result.occluded_ = value;
        return this;
      }
      public Builder clearOccluded() {
        result.hasOccluded = false;
        result.occluded_ = false;
        return this;
      }
      
      // required double locX = 3;
      public boolean hasLocX() {
        return result.hasLocX();
      }
      public double getLocX() {
        return result.getLocX();
      }
      public Builder setLocX(double value) {
        result.hasLocX = true;
        result.locX_ = value;
        return this;
      }
      public Builder clearLocX() {
        result.hasLocX = false;
        result.locX_ = 0D;
        return this;
      }
      
      // required double locY = 4;
      public boolean hasLocY() {
        return result.hasLocY();
      }
      public double getLocY() {
        return result.getLocY();
      }
      public Builder setLocY(double value) {
        result.hasLocY = true;
        result.locY_ = value;
        return this;
      }
      public Builder clearLocY() {
        result.hasLocY = false;
        result.locY_ = 0D;
        return this;
      }
      
      // required double locZ = 5;
      public boolean hasLocZ() {
        return result.hasLocZ();
      }
      public double getLocZ() {
        return result.getLocZ();
      }
      public Builder setLocZ(double value) {
        result.hasLocZ = true;
        result.locZ_ = value;
        return this;
      }
      public Builder clearLocZ() {
        result.hasLocZ = false;
        result.locZ_ = 0D;
        return this;
      }
      
      // required .kinectd.protocol.State.Orientation orient = 6;
      public boolean hasOrient() {
        return result.hasOrient();
      }
      public kinectd.protocol.KinematicState.State.Orientation getOrient() {
        return result.getOrient();
      }
      public Builder setOrient(kinectd.protocol.KinematicState.State.Orientation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOrient = true;
        result.orient_ = value;
        return this;
      }
      public Builder clearOrient() {
        result.hasOrient = false;
        result.orient_ = kinectd.protocol.KinematicState.State.Orientation.CENTER;
        return this;
      }
      
      // required double centerOffset = 7;
      public boolean hasCenterOffset() {
        return result.hasCenterOffset();
      }
      public double getCenterOffset() {
        return result.getCenterOffset();
      }
      public Builder setCenterOffset(double value) {
        result.hasCenterOffset = true;
        result.centerOffset_ = value;
        return this;
      }
      public Builder clearCenterOffset() {
        result.hasCenterOffset = false;
        result.centerOffset_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:kinectd.protocol.State)
    }
    
    static {
      defaultInstance = new State(true);
      kinectd.protocol.KinematicState.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:kinectd.protocol.State)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_kinectd_protocol_State_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_kinectd_protocol_State_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021proto/State.proto\022\020kinectd.protocol\"\335\001" +
      "\n\005State\022\020\n\010frameNum\030\001 \002(\r\022\020\n\010occluded\030\002 " +
      "\002(\010\022\014\n\004locX\030\003 \002(\001\022\014\n\004locY\030\004 \002(\001\022\014\n\004locZ\030" +
      "\005 \002(\001\0223\n\006orient\030\006 \002(\0162#.kinectd.protocol" +
      ".State.Orientation\022\024\n\014centerOffset\030\007 \002(\001" +
      "\";\n\013Orientation\022\n\n\006CENTER\020\000\022\010\n\004LEFT\020\001\022\t\n" +
      "\005RIGHT\020\002\022\013\n\007UNKNOWN\020\003B\020B\016KinematicState"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_kinectd_protocol_State_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_kinectd_protocol_State_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_kinectd_protocol_State_descriptor,
              new java.lang.String[] { "FrameNum", "Occluded", "LocX", "LocY", "LocZ", "Orient", "CenterOffset", },
              kinectd.protocol.KinematicState.State.class,
              kinectd.protocol.KinematicState.State.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
